<project name="EasyShare" default="build" basedir=".">

    <description>Java application core of the "EasyShare" project.</description>

    <!-- properties and paths -->

    <property name="src.dir" location="src" />
    <property name="build.dir" location="build" />
    <property name="lib.dir" location="lib" />
    <property name="build.classes.dir" location="${build.dir}/classes" />
    <property name="build.core.dir" location="${build.dir}/classes/core" />
    <property name="build.src.dir" location="${build.dir}/src" />
	
	<property name="jar.filename" value="${ant.project.name}-core.jar" />
	<property name="jar.file" value="${build.dir}/${jar.filename}" />

    <path id="project.classpath">
        <pathelement location="${build.classes.dir}" />
        <fileset dir="${lib.dir}">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <!-- This property defines the instance identifier.
             By default it is empty. It can be redefined using ant -D or using antcall inside a target -->

    <target name="show"
        description="Show property values" >
        <echo message="ant.project.name = ${ant.project.name}" />
        <echo message="" />
        <echo message="src.dir = ${src.dir}" />
        <echo message="build.dir = ${build.dir}" />
        <echo message="build.classes.dir = ${build.classes.dir}" />
        <echo message="build.src.dir = ${build.classes.dir}" />
        <echo message="" />
        <pathconvert property="project.classpath" refid="project.classpath" />
        <echo message="project.classpath= ${project.classpath}" />
    </target>

    <!-- targets -->

    <target name="init">
        <mkdir dir="${build.dir}" />
        <mkdir dir="${build.classes.dir}" />
        <mkdir dir="${build.src.dir}" />
    </target>

    <target name="clean"
        description="Delete build directory" >
        <delete dir="${build.dir}" />
    </target>

    <target name="prepare-resources" depends="init">
        <!-- description="Prepare application resource files" -->
        <copy todir="${build.classes.dir}" overwrite="true">
            <fileset dir="${src.dir}" excludes="**/*.java" />
        </copy>
        <replace dir="${build.classes.dir}" excludes="**/*.class" summary="true">
            <replacefilter token="@example-token@" value="${example-property}" />
        </replace>
    </target>

    <target name="run" depends="compile" description="run application">
        <java classname="textio.AppTest" fork="false">
            <classpath>
                <path refid="project.classpath" />
            </classpath>
        </java>
    </target>

    <target name="compile" depends="init,prepare-resources"
        description="Compile source code" >
        <javac srcdir="${src.dir}"
            destdir="${build.classes.dir}"
            includeantruntime="false" debug="true">
            <classpath refid="project.classpath" />
        </javac>
    </target>

    <target name="build" depends="compile, create-jar"
        description="Build the project" />
	
    <target name="create-jar" depends="compile">
        <jar destfile="${jar.file}" update="true">
            <!-- compiled classes and resource files -->
            <zipfileset dir="${build.core.dir}"
                        includes="**/*,**/*.properties,**/*.xml"
                        prefix="core" />
        </jar>
    </target>

</project>
